@using sudoku.Models;

@model SudokuTable;

@{
    ViewData["Title"] = "Sudoku Solver";
}

<div class="container mt-4">
    <div class="row">
        <!-- Left Side: Sudoku Grid -->
        <div class="col-md-6">
            <h3>Sudoku Grid</h3>
            <div class="table-responsive">
                <table class="table table-bordered text-center">
                    <tbody>
                        @for (int row = 0; row < 9; row++)
                        {
                            if (row % 3 == 0)
                            {
                                <div class="my-2"></div>
                            }
                            <tr>
                                @for (int col = 0; col < 9; col++)
                                {
                                    int value = Model.Table[row * 9 + col].Value;
                                    <td>
                                        <input type="text" class="form-control text-center"
                                        maxlength="1"
                                        value="@(value == 0 ? "" : value.ToString())">
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <form method="post" asp-action="SolveAll">
                <button type="submit" class="btn btn-primary">Solve all 50</button>
                @if (ViewBag.SolvedSudokus != null)
                {
                    <p>@ViewBag.SolvedCount of 50! Answer is: @ViewBag.sumAnswer</p>
                    <table>
                        <tr>
                            <th>Num</th>
                            <th>?</th>
                        </tr>
                        @foreach (var sudoku in ViewBag.SolvedSudokus)
                        {
                            <tr>
                                <td>@sudoku.GridNumber</td>
                                <td>@if (sudoku.Solved)
                                    {
                                        <span class='text-success text-semibold'>Yes</span>
                                    }
                                    else
                                    {
                                        <span class='text-danger text-bold text-decoration-underline'>No</span>
                                    }
                                </td>
                            </tr>
                        }
                    </table>
                }
            </form>
        </div>

        <!-- Right Side: Grid Selection -->
        <div class="col-md-6">
            <h3>Select a Sudoku Grid</h3>
            <form method="post" asp-action="Index">
                <div class="mb-3">
                    <label for="gridSelect" class="form-label">Select Grid</label>
                    <select class="form-select" id="gridSelect" name="gridNumber">
                        @for (int i = 1; i <= 50; i++)
                        {
                            if (Model.CurrentGridNumber == i)
                            {
                                <option value="@i" selected>Grid @i.ToString("D2")</option>

                            }
                            else
                            {
                                <option value="@i">Grid @i.ToString("D2")</option>
                            }
                        }
                    </select>
                </div>
                <div class="flex flex-row gap-2">
                    <button type="submit" class="btn btn-primary">Generate</button>
                </div>
                @for (int row = 0; row < 9; row++)
                {
                    <p>
                        @for (int col = 0; col < 9; col++)
                        {
                            @Model.Table[(row * 9) + col].Value.ToString()
                        }
                    </p>
                }
                <p>Table solved: @Model.isSolved.ToString()</p>
                <p>Brutforce used: @Model.brutforceUsed.ToString()</p>
            </form>
        </div>
    </div>
</div>